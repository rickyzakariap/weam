# ðŸš€ Optimized Multi-Stage Dockerfile for Next.js
# Features: Multi-stage builds, caching, security, and performance optimization

# ========= STAGE 1: Base ==========
FROM node:20-alpine AS base
WORKDIR /usr/src/app

# Install pnpm globally with optimizations
RUN npm install -g pnpm@latest && \
    pnpm config set store-dir /usr/src/app/.pnpm-store && \
    pnpm config set cache-dir /usr/src/app/.pnpm-cache

# ========= STAGE 2: Dependencies ==========
FROM base AS deps

# Copy package files first for better caching
COPY package.json pnpm-lock.yaml ./

# Install dependencies with optimizations
RUN pnpm install --frozen-lockfile --prefer-offline && \
    pnpm store prune

# ========= STAGE 3: Builder ==========
FROM base AS builder

# Copy dependencies from deps stage
COPY --from=deps /usr/src/app/node_modules ./node_modules
COPY --from=deps /usr/src/app/.pnpm-store ./.pnpm-store

# Copy source code
COPY . .

# Build arguments for environment variables
ARG NEXT_PUBLIC_SERVER_NODE_API_URL
ARG NEXT_PUBLIC_PYTHON_API_URL
ARG NEXT_PUBLIC_DOMAIN_URL
ARG NEXT_PUBLIC_API_PREFIX
ARG NEXT_PUBLIC_APP_ENVIRONMENT
ARG NEXT_PUBLIC_COMMON_NODE_API_URL
ARG NEXT_PUBLIC_COOKIE_NAME
ARG NEXT_PUBLIC_COOKIE_PASSWORD
ARG NEXT_PUBLIC_AWS_S3_URL
ARG NEXT_PUBLIC_HTTPS_PROTOCOL
ARG NEXT_PUBLIC_IMAGE_DOMAIN
ARG NEXT_PUBLIC_SOCKET_CONNECTION_URL
ARG NEXT_PUBLIC_SECURITY_KEY
ARG NEXT_PUBLIC_MESSAGE_LIMIT
ARG NEXT_PUBLIC_FREE_TRIAL_DAYS
ARG NEXT_PUBLIC_OPENAI_PLATFORM_URL
ARG NEXT_PUBLIC_FRESHDESK_SUPPORT_URL
ARG CSRF_TOKEN_SECRET
ARG NEXT_PUBLIC_SLACK_CLIENT_ID
ARG NEXT_PUBLIC_SLACK_CLIENT_SECRET
ARG NEXT_PUBLIC_GITHUB_CLIENT_ID
ARG NEXT_PUBLIC_GITHUB_CLIENT_SECRET
ARG NEXT_PUBLIC_GOOGLE_OAUTH_CLIENT_ID
ARG NEXT_PUBLIC_GOOGLE_OAUTH_CLIENT_SECRET

# Set environment variables
ENV NEXT_PUBLIC_SERVER_NODE_API_URL=$NEXT_PUBLIC_SERVER_NODE_API_URL
ENV NEXT_PUBLIC_PYTHON_API_URL=$NEXT_PUBLIC_PYTHON_API_URL
ENV NEXT_PUBLIC_DOMAIN_URL=$NEXT_PUBLIC_DOMAIN_URL
ENV NEXT_PUBLIC_API_PREFIX=$NEXT_PUBLIC_API_PREFIX
ENV NEXT_PUBLIC_APP_ENVIRONMENT=$NEXT_PUBLIC_APP_ENVIRONMENT
ENV NEXT_PUBLIC_COMMON_NODE_API_URL=$NEXT_PUBLIC_COMMON_NODE_API_URL
ENV NEXT_PUBLIC_COOKIE_NAME=$NEXT_PUBLIC_COOKIE_NAME
ENV NEXT_PUBLIC_COOKIE_PASSWORD=$NEXT_PUBLIC_COOKIE_PASSWORD
ENV NEXT_PUBLIC_AWS_S3_URL=$NEXT_PUBLIC_AWS_S3_URL
ENV NEXT_PUBLIC_HTTPS_PROTOCOL=$NEXT_PUBLIC_HTTPS_PROTOCOL
ENV NEXT_PUBLIC_IMAGE_DOMAIN=$NEXT_PUBLIC_IMAGE_DOMAIN
ENV NEXT_PUBLIC_SOCKET_CONNECTION_URL=$NEXT_PUBLIC_SOCKET_CONNECTION_URL
ENV NEXT_PUBLIC_SECURITY_KEY=$NEXT_PUBLIC_SECURITY_KEY
ENV NEXT_PUBLIC_MESSAGE_LIMIT=$NEXT_PUBLIC_MESSAGE_LIMIT
ENV NEXT_PUBLIC_FREE_TRIAL_DAYS=$NEXT_PUBLIC_FREE_TRIAL_DAYS
ENV NEXT_PUBLIC_OPENAI_PLATFORM_URL=$NEXT_PUBLIC_OPENAI_PLATFORM_URL
ENV NEXT_PUBLIC_FRESHDESK_SUPPORT_URL=$NEXT_PUBLIC_FRESHDESK_SUPPORT_URL
ENV CSRF_TOKEN_SECRET=$CSRF_TOKEN_SECRET
ENV NEXT_PUBLIC_SLACK_CLIENT_ID=$NEXT_PUBLIC_SLACK_CLIENT_ID
ENV NEXT_PUBLIC_SLACK_CLIENT_SECRET=$NEXT_PUBLIC_SLACK_CLIENT_SECRET
ENV NEXT_PUBLIC_GITHUB_CLIENT_ID=$NEXT_PUBLIC_GITHUB_CLIENT_ID
ENV NEXT_PUBLIC_GITHUB_CLIENT_SECRET=$NEXT_PUBLIC_GITHUB_CLIENT_SECRET
ENV NEXT_PUBLIC_GOOGLE_OAUTH_CLIENT_ID=$NEXT_PUBLIC_GOOGLE_OAUTH_CLIENT_ID
ENV NEXT_PUBLIC_GOOGLE_OAUTH_CLIENT_SECRET=$NEXT_PUBLIC_GOOGLE_OAUTH_CLIENT_SECRET

# Build optimizations
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"

# Build the application
RUN pnpm build

# ========= STAGE 4: Development ==========
FROM base AS development
WORKDIR /usr/src/app

# Copy dependencies
COPY --from=deps /usr/src/app/node_modules ./node_modules
COPY --from=deps /usr/src/app/.pnpm-store ./.pnpm-store

# Copy source code
COPY . .

# Expose port
EXPOSE 3000

# Start development server
CMD ["pnpm", "dev"]

# ========= STAGE 5: Production ==========
FROM node:20-alpine AS production

# Security: Create non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

WORKDIR /usr/src/app

# Copy built application
COPY --from=builder /usr/src/app/public ./public
COPY --from=builder /usr/src/app/.next/standalone ./
COPY --from=builder /usr/src/app/.next/static ./.next/static

# Set ownership
RUN chown -R nextjs:nodejs /usr/src/app
USER nextjs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/api/health || exit 1

# Start production server
CMD ["node", "server.js"]
