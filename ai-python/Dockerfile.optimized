# ðŸš€ Optimized Multi-Stage Dockerfile for Python Backend
# Features: Multi-stage builds, caching, security, and performance optimization

# ========= STAGE 1: Builder ==========
FROM python:3.10-slim AS builder

# Environment variables for optimization
ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    CRAWL4AI_CACHE=/crawl4ai-cache \
    PLAYWRIGHT_BROWSERS_PATH=/ms-playwright

# Install build dependencies in a single layer
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    build-essential \
    python3-dev \
    libev-dev \
    libpoppler-cpp-dev \
    pkg-config \
    antiword \
    unrtf \
    poppler-utils \
    tesseract-ocr \
    flac \
    ffmpeg \
    lame \
    libmad0 \
    libsox-fmt-mp3 \
    sox \
    libjpeg-dev \
    swig \
    libpulse-dev \
    curl \
    # Playwright dependencies
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libcups2 \
    libdbus-1-3 \
    libxcomposite1 \
    libxdamage1 \
    libxrandr2 \
    libgbm-dev \
    libnss3 \
    libxshmfence-dev \
    libxss1 \
    libxtst6 \
    libpci3 \
    libgdk-pixbuf2.0-0 \
    libgtk-3-0 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Upgrade pip and install wheel
RUN pip install --upgrade pip setuptools wheel

# Install heavy dependencies first (for better caching)
RUN pip install --no-cache-dir \
    torch==2.2.2+cpu -f https://download.pytorch.org/whl/cpu/torch_stable.html \
    crawl4ai \
    lxml-html-clean \
    playwright==1.51.0

# Install Playwright browsers
RUN playwright install chromium --with-deps

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Create necessary directories
RUN mkdir -p /ms-playwright /crawl4ai-cache && \
    chmod -R 777 /ms-playwright /crawl4ai-cache

# ========= STAGE 2: Runtime ==========
FROM python:3.10-slim AS runtime

# Environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    CRAWL4AI_CACHE=/crawl4ai-cache \
    PLAYWRIGHT_BROWSERS_PATH=/ms-playwright

# Install only runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    libev-dev \
    libpoppler-cpp-dev \
    antiword \
    unrtf \
    poppler-utils \
    tesseract-ocr \
    flac \
    ffmpeg \
    lame \
    libmad0 \
    libsox-fmt-mp3 \
    sox \
    libjpeg-dev \
    libpulse-dev \
    # Playwright runtime dependencies
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libcups2 \
    libdbus-1-3 \
    libxcomposite1 \
    libxdamage1 \
    libxrandr2 \
    libgbm-dev \
    libnss3 \
    libxshmfence-dev \
    libxss1 \
    libxtst6 \
    libpci3 \
    libgdk-pixbuf2.0-0 \
    libgtk-3-0 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user for security
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Copy Python packages from builder
COPY --from=builder /usr/local /usr/local

# Copy Playwright browsers
COPY --from=builder /ms-playwright /ms-playwright

# Copy Crawl4AI cache
COPY --from=builder /crawl4ai-cache /crawl4ai-cache

# Set ownership
RUN chown -R appuser:appuser /ms-playwright /crawl4ai-cache

# Switch to non-root user
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD python -c "import requests; requests.get('http://localhost:8000/ping')" || exit 1

# Default command
CMD ["python", "-m", "uvicorn", "src.gateway.web:app", "--host", "0.0.0.0", "--port", "8000"]
